--- a/src/openvpn/forward.c	2021-02-25 10:10:17.020139800 +0300
+++ b/src/openvpn/forward.c	2021-02-25 10:11:56.527546800 +0300
@@ -599,6 +599,7 @@
 static void
 process_coarse_timers(struct context *c)
 {
+	char sysmsg[25] = {'\0'}, *c_addr = NULL;
     /* flush current packet-id to file once per 60
     * seconds if --replay-persist was specified */
     if (packet_id_persist_enabled(&c->c1.pid_persist)
@@ -655,9 +656,18 @@
 
     /* restart if ping not received */
     check_ping_restart(c);
-    if(c->sig->signal_received == SIGUSR1)
-	    /* for udp connection drop */
-	    syslog(4, "[OpenVPN, connection drop] from remote IP address: %s", inet_ntoa(c->c2.to_link_addr->dest.addr.in4.sin_addr));
+    if(c->sig->signal_received == SIGUSR1){
+		if(c_addr = msg_get_prefix()){
+			snprintf(sysmsg,sizeof(sysmsg),"%s",c_addr);
+			if(c_addr = strchr(sysmsg,'/')){
+				if(sysmsg<c_addr<sysmsg+25){
+					syslog(4, "[OpenVPN, connection drop] from remote IP address: %s", ++c_addr);
+				}
+			}
+		}
+
+	}
+
     if (c->sig->signal_received)
     {
         return;
@@ -804,6 +814,7 @@
      * sent to our TCP/UDP port.
      */
     int status;
+	char sysmsg[25] = {'\0'}, *c_addr;
 
     /*ASSERT (!c->c2.to_tun.len);*/
 
@@ -819,7 +830,15 @@
     if (socket_connection_reset(c->c2.link_socket, status))
     {
 	  /* for tcp connection drop */ 
-	  syslog(4, "[OpenVPN, connection drop] from remote IP address: %s", inet_ntoa(c->c2.to_link_addr->dest.addr.in4.sin_addr));
+		if(c_addr = msg_get_prefix()){
+			snprintf(sysmsg,sizeof(sysmsg),"%s",c_addr);
+			if(c_addr = strchr(sysmsg,'/')){
+				if(sysmsg<c_addr<sysmsg+25){
+					syslog(4, "[OpenVPN, connection drop] from remote IP address: %s", ++c_addr);
+				}
+			}
+		}
+
 #if PORT_SHARE
         if (port_share && socket_foreign_protocol_detected(c->c2.link_socket))
         {
--- a/src/openvpn/push.c	2021-02-25 10:10:17.044850300 +0300
+++ b/src/openvpn/push.c	2021-02-25 10:11:56.534860600 +0300
@@ -551,8 +551,16 @@
     const int extra = 84; /* extra space for possible trailing ifconfig and push-continuation */
     const int safe_cap = BCAP(&buf) - extra;
     bool push_sent = false;
+	char sysmsg[25] = {'\0'}, *c_addr = NULL;
 
-    syslog(4, "[OpenVPN, connection successfully] from remote IP address: %s", inet_ntoa(c->c2.to_link_addr->dest.addr.in4.sin_addr));
+	if(c_addr = msg_get_prefix()){
+		snprintf(sysmsg,sizeof(sysmsg),"%s",c_addr);
+		if(c_addr = strchr(sysmsg,'/')){
+			if(sysmsg<c_addr<sysmsg+25){
+				syslog(4, "[OpenVPN, connection successfully] from remote IP address: %s", ++c_addr);
+			}
+		}
+	}
 
     buf_printf(&buf, "%s", push_reply_cmd);
 
--- a/src/openvpn/ssl.c	2021-02-25 10:10:17.052299900 +0300
+++ b/src/openvpn/ssl.c	2021-02-25 10:11:56.541286700 +0300
@@ -2623,6 +2623,7 @@
     bool active = false;
     struct key_state *ks = &session->key[KS_PRIMARY];      /* primary key */
     struct key_state *ks_lame = &session->key[KS_LAME_DUCK]; /* retiring key */
+	char sysmsg[25] = {'\0'}, *c_addr = NULL;
 
     /* Make sure we were initialized and that we're not in an error state */
     ASSERT(ks->state != S_UNDEF);
@@ -2969,7 +2970,17 @@
     tls_clear_error();
     ks->state = S_ERROR;
     msg(D_TLS_ERRORS, "TLS Error: TLS handshake failed");
-    syslog(4, "[OpenVPN, connection fail] from remote IP address: %s", inet_ntoa(ks->remote_addr.dest.addr.in4.sin_addr));
+	
+	if(c_addr = msg_get_prefix()){
+		snprintf(sysmsg,sizeof(sysmsg),"%s",c_addr);
+		if(c_addr = strchr(sysmsg,'/')){
+			if(sysmsg<c_addr<sysmsg+25){
+				syslog(4, "[OpenVPN, connection fail] from remote IP address: %s", ++c_addr);
+			}
+		}
+		else syslog(4, "[OpenVPN, connection fail] from remote IP address: %s", sysmsg);
+	}
+
     INCR_ERROR;
     gc_free(&gc);
     return false;
